import hope.base.dhl.plugin.BuildConfig
import hope.base.dhl.plugin.AndroidX
import hope.base.dhl.plugin.Fresco
import hope.base.dhl.plugin.Kotlin
import hope.base.dhl.plugin.OkHttp
import hope.base.dhl.plugin.Refresh
import hope.base.dhl.plugin.Test

plugins{
    id "hope.base.dhl.plugin"
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'kotlin-kapt'
    id 'com.novoda.bintray-release'
}


android {
    compileSdkVersion BuildConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    //noinspection GroovyMissingReturnStatement
    lintOptions {
        disable 'InvalidPackage'
        abortOnError true
        textReport true
        textOutput "stdout"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions.freeCompilerArgs += ['-module-name', "hope.base"]
    }
    viewBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api AndroidX.coreKtx
    api AndroidX.coreAnimation
    api AndroidX.annotation
    api AndroidX.appcompat
    api AndroidX.material
    api AndroidX.recyclerview
    api AndroidX.vectordrawable
    api AndroidX.vectordrawableAnimated
    api AndroidX.constraintlayout
    api AndroidX.constraintlayoutSolver
    api AndroidX.lr
    api AndroidX.llk
    api AndroidX.lvk
    api AndroidX.lcj8
    api AndroidX.le
    api AndroidX.lc
    api AndroidX.ck
    api AndroidX.start
    api OkHttp.okhttp
    api OkHttp.logging
    api(Fresco.fresco){
        exclude group: 'com.facebook.soloader', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'nativeimagefilters'
        exclude group: 'com.facebook.fresco', module: 'nativeimagetranscoder'
        exclude group: 'com.facebook.fresco', module: 'memory-type-native'
        exclude group: 'com.facebook.fresco', module: 'imagepipeline-native'
    }
    api OkHttp.retrofit
    api OkHttp.gson
    api Refresh.kernel
    api Refresh.header
    api Kotlin.stdlib8
    api Kotlin.coroutinesCore
    api Kotlin.coroutinesAndroid

    testImplementation Test.junit
    testImplementation Test.mockito
    testImplementation OkHttp.mockwebserver
    testImplementation Test.coroutines
    androidTestImplementation Test.junitAndroidX
    androidTestImplementation Test.runner
    androidTestImplementation Test.rules
    androidTestImplementation Test.espresso
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

tasks.withType(Javadoc).all {
    enabled = false
}

publish {
    userOrg = 'forhope33786'
    groupId = 'for.hope'
    artifactId = 'android-base'
    publishVersion = BuildConfig.versionName
    desc = 'super android base'
    bintrayUser = System.getenv("bintray_user")
    bintrayKey = System.getenv("bintray_key")

    dryRun = false
}

//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId 'for.hope' // Replace with group ID
//            artifactId 'android-base'
//            version versionName
//            artifact("$buildDir/outputs/aar/base-release.aar")
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            /** Configure path of your package repository on Github
//             ** Replace GITHUB_USERID with your/organisation Github userID
//             ** and REPOSITORY with the repository name on GitHub
//             */
//            url = uri("https://maven.pkg.github.com/pzhangleo/hope-base")
//            credentials {
//                /** Create github.properties in root project folder file with
//                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
//                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
//
//                username = System.getenv("GPR_USER")
//                password = System.getenv("GPR_API_KEY")
//            }
//        }
//    }
//}